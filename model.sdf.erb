<?xml version='1.0'?>
<%
  # Parameterized gearbox demo
  require "matrix"
  def a_to_s(v)
    Array(v).join(" ")
  end

  # default density of Aluminum in kg/m^3
  def box_inertia(dx, dy, dz, density=2700)
    box = {}
    box[:size]   = Vector[dx, dy, dz]
    box[:volume] = dx * dy * dz
    box[:mass] = density * box[:volume]
    box[:ixx]  = box[:mass]/12.0 * (dy**2 + dz**2)
    box[:iyy]  = box[:mass]/12.0 * (dz**2 + dx**2)
    box[:izz]  = box[:mass]/12.0 * (dx**2 + dy**2)
    box
  end
  boxes = {}

  boxes["input_body"] = box_inertia(1, 1, 1, density=1)
  boxes["output_body"] = box_inertia(1, 1, 1, density=1)
  boxes["motor_shaft"] = box_inertia(0.15, 1, 1, density=1)

  boxes["input_body"][:pose] = Vector[1, 0, 0, 0, 0, 0]
  boxes["motor_shaft"][:pose] = Vector[0, 0, 0, 0, 0, 0]
  boxes["output_body"][:pose] = Vector[-1, 0, 0, 0, 0, 0]

  joint_damping = 1
%>
<sdf version='1.6'>
  <model name='gearbox_demo'>
    <pose>0 0 1.5 0 <%= Math::PI / 2 %> 0</pose>
<%
  boxes.keys.each do |link_name|
%>
    <link name='<%= link_name %>'>
      <pose frame=''><%= a_to_s(boxes[link_name][:pose]) %></pose>
      <inertial>
        <mass><%= boxes[link_name][:mass] %></mass>
        <inertia>
          <ixx><%= boxes[link_name][:ixx] %></ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy><%= boxes[link_name][:iyy] %></iyy>
          <iyz>0</iyz>
          <izz><%= boxes[link_name][:izz] %></izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <geometry>
          <box>
            <size><%= a_to_s(boxes[link_name][:size]) %></size>
          </box>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Grey</name>
          </script>
        </material>
      </visual>
      <collision name='collision'>
        <geometry>
          <box>
            <size><%= a_to_s(boxes[link_name][:size]) %></size>
          </box>
        </geometry>
      </collision>
    </link>
<%
  end
%>
    <joint name='input_joint' type='revolute'>
      <parent>motor_shaft</parent>
      <child>input_body</child>
      <pose frame=''>0 0 0 0 -0 0</pose>
      <axis>
        <xyz>1 0 0</xyz>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
          <damping><%= joint_damping %></damping>
          <friction>0</friction>
        </dynamics>
      </axis>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>
    <joint name='output_joint' type='revolute'>
      <parent>output_body</parent>
      <child>motor_shaft</child>
      <pose frame=''>0 0 0 0 -0 0</pose>
      <axis>
        <xyz>1 0 0</xyz>
      </axis>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
          <damping><%= joint_damping %></damping>
          <friction>0</friction>
        </dynamics>
    </joint>
    <joint name='output_reduction' type='gearbox'>
      <parent>motor_shaft</parent>
      <child>output_body</child>
      <gearbox_ratio>-0.1</gearbox_ratio>
      <gearbox_reference_body>input_body</gearbox_reference_body>
      <axis>
        <xyz>1 0 0</xyz>
      </axis>
      <axis2>
        <xyz>1 0 0</xyz>
      </axis2>
    </joint>
  </model>
</sdf>
